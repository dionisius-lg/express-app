<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Filter Data</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-sm btn-info rounded-0 btn-add" onclick="addData()">Add New</button>
                </div>
            </div>
            <div class="card-body">
                <form id="formFilter" action="<%= currentUrl %>" method="get" autocomplete="off">
                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label class="form-label">SKU</label>
                            <input type="text" name="sku" class="form-control form-control-sm rounded-0" value="<%= query.sku %>">
                        </div>
                        <div class="form-group col-md-2">
                            <label class="form-label">Product</label>
                            <input type="text" name="product" class="form-control form-control-sm rounded-0" value="<%= query.product %>">
                        </div>
                        <div class="form-group col-md-2">
                            <label class="form-label">Supplier</label>
                            <select name="supplier_id" class="form-control form-control-sm rounded-0">
                                <option value="">Choose...</option>
                                <% suppliers.data.map((row) => { %>
                                    <option value="<%= row.id %>"><%= row.name %></option>
                                <% }) %>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button type="submit" class="btn btn-sm btn-primary rounded-0">Search</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <div class="card">
            <div class="card-body table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th class="text-nowrap" scope="col">No.</th>
                            <th class="text-nowrap" scope="col">SKU</th>
                            <th class="text-nowrap" scope="col">Product</th>
                            <th class="text-nowrap" scope="col">Supplier</th>
                            <th class="text-nowrap" scope="col">Qty</th>
                            <th class="text-nowrap" scope="col">Stock In Date</th>
                            <th class="text-nowrap" scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (stock_in.total_data > 0) { %>
                            <% stock_in.data.map((row, i) => { %>
                                <tr>
                                    <td class="text-nowrap" scope="row"><%= paging.index[i] %></td>
                                    <td class="text-nowrap"><%= row.sku %></td>
                                    <td class="text-nowrap"><%= row.product %> - <%= row.product_category %> / <%= row.product_unit %></td>
                                    <td class="text-nowrap"><%= row.supplier %></td>
                                    <td class="text-nowrap"><%= row.qty %></td>
                                    <td class="text-nowrap"><%= row.stocked_date %></td>
                                    <td class="text-nowrap">
                                        <button type="button" class="btn btn-sm btn-warning rounded-0 btn-detail" title="detail" onclick="detailData('<%= row.id %>')">
                                            <i class="far fa-eye fa-fw"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-danger rounded-0 btn-delete" onclick="deleteData('<%= row.id %>')">
                                            <i class="far fa-trash-alt fa-fw"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                            
                        <% } else { %>
                            <tr>
                                <td colspan="8">No data found</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
                <hr>
                <%- pagination %>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalData" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form-data collapse show" autocomplete="off">
                <div class="modal-body row">
                    <input type="hidden" name="product_id" class="form-control form-control-sm rounded-0">
                    <div class="form-group col-md-6">
                        <label class="form-label">SKU</label>
                        <div class="input-group input-group-sm">
                            <input type="text" name="sku" class="form-control form-control-sm rounded-0" readonly>
                            <div class="input-group-append">
                                <button type="button" class="btn btn-sm btn-info rounded-0" onclick="showModalTable()" autofocus>
                                    <span class="fas fa-search fa-fw"></span>
                                </button>
                            </div>
                        </div>
                        <span class="form-error small text-danger"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Product</label>
                        <input type="text" name="product" class="form-control form-control-sm rounded-0" readonly>
                        <span class="invalid-feedback"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Current Stock</label>
                        <input type="text" name="stock" class="form-control form-control-sm rounded-0 numeric" readonly>
                        <span class="invalid-feedback"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Stock In Date</label>
                        <input type="text" name="stocked_date" class="form-control form-control-sm rounded-0 date">
                        <span class="invalid-feedback"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Qty</label>
                        <input type="text" name="qty" class="form-control form-control-sm rounded-0 numeric">
                        <span class="invalid-feedback"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Supplier</label>
                        <select name="supplier_id" class="form-control form-control-sm rounded-0">
                            <option value="">Choose...</option>
                            <% suppliers.data.map((row) => { %>
                                <option value="<%= row.id %>"><%= row.name %></option>
                            <% }) %>
                        </select>
                        <span class="invalid-feedback"></span>
                    </div>
                    <div class="form-group col-md-12">
                        <label class="form-label">Note</label>
                        <textarea name="note" rows="3" class="form-control form-control-sm rounded-0"></textarea>
                        <span class="invalid-feedback"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Created Date</label>
                        <input type="text" name="created_date" class="form-control-plaintext form-control-sm" readonly>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Created By</label>
                        <input type="text" name="created_user" class="form-control-plaintext form-control-sm" readonly>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Last Updated Date</label>
                        <input type="text" name="updated_date" class="form-control-plaintext form-control-sm" readonly>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="form-label">Last Update By</label>
                        <input type="text" name="updated_user" class="form-control-plaintext form-control-sm" readonly>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-sm btn-primary rounded-0 btn-submit">Save</button>
                    <button type="button" class="btn btn-sm btn-default rounded-0 btn-cancel" data-dismiss="modal">Close</button>
                </div>
            </form>
            <div class="list-data modal-body collapse">
                <form class="form-row align-items-center mb-3" autocomplete="off">
                    <div class="col-5">
                        <input type="text" name="sku" class="form-control form-control-sm rounded-0" placeholder="Search SKU...">
                    </div>
                    <div class="col-5">
                        <input type="text" name="name" class="form-control form-control-sm rounded-0" placeholder="Search Name...">
                    </div>
                    <div class="col-2">
                        <button type="submit" class="btn btn-sm btn-info btn-block rounded-0 btn-submit">
                            <span class="d-none d-sm-block">Search</span>
                            <span class="fas fa-search fa-fw d-sm-none"></span>
                        </button>
                    </div>
                </form>
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th class="text-nowrap" scope="col">SKU</th>
                                <th class="text-nowrap" scope="col">Name</th>
                                <th class="text-nowrap" scope="col">Qty</th>
                                <th class="text-nowrap" scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="4" class="text-nowrap text-center">No data found</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="table-nav text-right mt-3"></div>
            </div>
        </div>
    </div>
</div>

<script>
    const modalData = $('#modalData')
    const formData = $('#modalData .form-data')
    const listData = $('#modalData .list-data')

    modalData.on('hidden.bs.modal', () => {
        showModalForm()
    })

    formData.on('submit', (e) => {
        e.preventDefault()

        $.ajax({
            url: formData.attr('action'),
            type: 'post',
            data: formData.serialize(),
            dataType: 'json',
            beforeSend: () => {
                formData.find('.invalid-feedback, .form-error').empty()
                formData.find('.btn-submit').attr({'disabled': true}).prepend('<span class="spinner-border spinner-border-sm mr-2">&nbsp;</span>')
            },
            success: (res) => {
                if (res.success) {
                    modalData.modal('hide')
                    window.location.reload()
                } else {
                    if (res.redirect) {
                        window.location = res.redirect
                        return
                    }

                    if ('formError' in res) {
                        if (res.formError !== null && typeof res.formError === 'object') {
                            $.each(res.formError, (key, val) => {
                                if (val !== '') {
                                    formData.find(`[name="${key}"]`).addClass('is-invalid')
                                    formData.find(`[name="${key}"]`).parents('.form-group').find('.invalid-feedback').html(val.substr(0,1).toUpperCase() + val.substr(1))
                                    formData.find(`[name="${key}"]`).parents('.form-group').find('.form-error').html(val.substr(0,1).toUpperCase() + val.substr(1))
                                }
                            })

                            formData.find('.btn-submit').attr({'disabled': false}).find('span').remove()
                            return
                        }
                    }

                    formData.find('.btn-submit').attr({'disabled': false}).find('span').remove()
                    modalData.modal('hide')
                    toastr.error(res.message)
                }
            }
        })
    })

    function addData() {
        formData[0].reset()
        formData.attr({'action': '<%= currentUrl %>/create'})
        formData.find('input, select, textarea').removeClass('is-invalid')
        formData.find('.invalid-feedback, .form-error').empty()
        modalData.find('.modal-header .modal-title').html('Add New Data')
        modalData.modal('show')
    }

    function detailData(id) {
        if (id && $.isNumeric(id)) {
            $.ajax({
                url: `<%= currentUrl %>/detail/${id}`,
                type: 'get',
                dataType: 'json',
                beforeSend: () => {
                    formData[0].reset()
                    formData.attr({'action': `<%= currentUrl %>/update/${id}`})
                    formData.find('input, select, textarea').removeClass('is-invalid')
                    formData.find('.invalid-feedback, .form-error').empty()
                    modalData.find('.modal-header .modal-title').html('Detail Data')
                },
                success: (res) => {
                    if (res.success) {
                        if (res.total_data > 0) {
                            $.each(res.data, (key, val) => {
                                formData.find(`[name="${key}"`).val(val)
                            })

                            modalData.modal('show')
                        }
                    } else {
                        if (res.redirect) {
                            window.location = res.redirect
                        }
                    }
                },
                error: (jqXHR, textStatus, errorThrown) => {
                    console.log(jqXHR.status + '|' + textStatus + '|' + errorThrown);
                }
            })
        }
    }

    function deleteData(id) {
        if (id && $.isNumeric(id)) {
            const swb = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-sm btn-primary rounded-0 mr-2',
                    cancelButton: 'btn btn-sm btn-default rounded-0'
                },
                buttonsStyling: false
            })

            swb.fire({
                title: 'Delete this data?',
                text: 'This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `<%= currentUrl %>/delete/${id}`,
                        type: 'get',
                        dataType: 'json',
                        success: (res) => {
                            if (res.success) {
                                window.location.reload()
                            } else {
                                if (res.redirect) {
                                    window.location = res.redirect
                                }

                                toastr.error(response.message)
                            }
                        },
                        error: (jqXHR, textStatus, errorThrown) => {
                            console.log(jqXHR.status + '|' + textStatus + '|' + errorThrown);
                        }
                    })
                }
            })
        }
    }

    function showModalTable() {
        formData.collapse('hide')
        listData.collapse('show')
        productList()
    }

    function showModalForm() {
        formData.collapse('show')
        listData.collapse('hide')
    }

    function productList(param) {
        const tableBody = listData.find('table tbody')
        const tableNav = listData.find('.table-nav')

        let requestUrl = `<%= currentUrl %>/products`

        if (param && param !== null) {
            requestUrl += `?${param}`
        }

        $.ajax({
            url: requestUrl,
            type: 'get',
            dataType: 'json',
            beforeSend: () => {
                tableBody.html(`<tr><td colspan="6" class="text-nowrap text-center">Please wait...</td></tr>`)
            },
            success: (res) => {
                if (res !== null && typeof res === 'object') {
                    if (res.success) {
                        tableBody.empty()

                        res.data.map((row, i) => {
                            let dataRow = JSON.stringify(row).replace(/"/g, "\'")

                            tableBody.append(`<tr>
                                <td class="text-nowrap">${row.sku}</td>
                                <td class="text-nowrap">${row.name} - ${row.product_category} / ${row.product_unit}</td>
                                <td class="text-nowrap">${row.stock}</td>
                                <td><button type="button" data-row="${dataRow}" class="btn btn-sm btn-primary rounded-0 btn-select">Select</button></td>
                            </tr>`)
                        })

                        if (res.hasOwnProperty('paging')) {
                            let navPrev = {
                                class: 'btn btn-sm btn-default rounded-0',
                                query: `page=${res.paging.previous}`
                            }

                            let navNext = {
                                class: 'btn btn-sm btn-default rounded-0',
                                query: `page=${res.paging.next}`
                            }

                            if (param && param !== null) {
                                let paramArr = param.split('&')

                                paramArr.forEach((val, i) => {
                                    if (!val.includes('page')) {
                                        navPrev.query += `&${val}`
                                        navNext.query += `&${val}`
                                    }
                                })
                            }

                            if (res.paging.current == res.paging.first) {
                                navPrev.class += ' disabled'
                            }

                            if (res.paging.current == res.paging.last) {
                                navNext.class += ' disabled'
                            }

                            tableNav.html(`
                                <button type="button" class="${navPrev.class}" data-query="${navPrev.query}">Prev</button>
                                <button type="button" class="${navNext.class}" data-query="${navNext.query}">Next</button>
                            `)
                        }

                        return
                    }
                }

                tableBody.html(`<tr><td colspan="6" class="text-nowrap text-center">No data found</td></tr>`)
            },
            error: (jqXHR, textStatus, errorThrown) => {
                console.log(jqXHR.status + '|' + textStatus + '|' + errorThrown)
                tableBody.html(`<tr><td colspan="6" class="text-nowrap text-center">No data found</td></tr>`)
            }
        })
    }

    listData.find('form').on('submit', (e) => {
        e.preventDefault()
        productList($(e.currentTarget).serialize()) 
    })

    listData.find('table').on('click', '.btn-select', (e) => {
        let dataRow = e.currentTarget.getAttribute('data-row').replace(/'/g, '\"')
            dataRow = JSON.parse(dataRow)

        $.each(dataRow, (key, val) => {
            if (['name', 'id'].indexOf(key) === -1) {
                formData.find(`[name="${key}"]`).val(val).trigger('change')
            }
        })

        formData.find(`[name="product_id"]`).val(dataRow.id).trigger('change')
        formData.find(`[name="product"]`).val(dataRow.name).trigger('change')
        showModalForm()
    })

    listData.find('table-nav').on('click', 'button', (e) => {
        if (e.currentTarget.classList.contains('disabled')) {
            return false
        }

        const dataQuery = e.currentTarget.getAttribute('data-query')
        productList(dataQuery)
    })

    $(() => {
        const supplierId = '<%= query.supplier_id %>'

        if (supplierId && $.isNumeric(supplierId)) {
            let element = $('#formFilter [name="supplier_id"]')

            if (element.find(`option[value="${supplierId}"]`).length) {
                element.val(supplierId).trigger('change')
            }
        }
    })
</script>