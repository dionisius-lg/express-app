<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Filter Data</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-sm btn-info rounded-0 btn-add" onclick="addData()">Add New</button>
                </div>
            </div>
            <div class="card-body">
                <form id="formFilter" action="<%= currentUrl %>" method="get" autocomplete="off">
                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label class="form-label">Name</label>
                            <input type="text" name="name" class="form-control form-control-sm rounded-0" value="<%= query.name %>">
                        </div>
                        <div class="form-group col-md-2">
                            <label class="form-label">SKU</label>
                            <input type="text" name="sku" class="form-control form-control-sm rounded-0" value="<%= query.sku %>">
                        </div>
                        <div class="form-group col-md-2">
                            <label class="form-label">Category</label>
                            <select name="product_category_id"  class="form-control form-control-sm rounded-0">
                                <option value="">Choose...</option>
                                <% product_categories.data.map((row) => { %>
                                    <option value="<%= row.id %>"><%= row.name %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="form-group col-md-2">
                            <label class="form-label">Unit</label>
                            <select name="product_unit_id"  class="form-control form-control-sm rounded-0">
                                <option value="">Choose...</option>
                                <% product_units.data.map((row) => { %>
                                    <option value="<%= row.id %>"><%= row.name %></option>
                                <% }) %>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button type="submit" class="btn btn-sm btn-primary rounded-0">Search</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <div class="card">
            <div class="card-body table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th class="text-nowrap" scope="col">No</th>
                            <th class="text-nowrap" scope="col">Name</th>
                            <th class="text-nowrap" scope="col">SKU</th>
                            <th class="text-nowrap" scope="col">Category</th>
                            <th class="text-nowrap" scope="col">Unit</th>
                            <th class="text-nowrap" scope="col">Buy Price</th>
                            <th class="text-nowrap" scope="col">Created Date</th>
                            <th class="text-nowrap" scope="col">Created By</th>
                            <th class="text-nowrap" scope="col">Last Updated Date</th>
                            <th class="text-nowrap" scope="col">Last Updated By</th>
                            <th class="text-nowrap" scope="col">Is Active</th>
                            <th class="text-nowrap" scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (products.total_data > 0) { %>
                            <% products.data.map((row, i) => { %>
                                <tr>
                                    <td class="text-nowrap" scope="row"><%= paging.index[i] %></td>
                                    <td class="text-nowrap"><%= row.name %></td>
                                    <td class="text-nowrap"><%= row.sku %></td>
                                    <td class="text-nowrap"><%= row.product_category %></td>
                                    <td class="text-nowrap"><%= row.product_unit %></td>
                                    <td class="text-nowrap"><%= row.buy_price %></td>
                                    <td><%= formatDateTime(row.created_date) ? formatDateTime(row.created_date) : '' %></td>
                                    <td><%= row.created_user %></td>
                                    <td><%= formatDateTime(row.updated_date) ? formatDateTime(row.updated_date) : '' %></td>
                                    <td><%= row.updated_user %></td>
                                    <td><i class="fas <%= row.is_active === 1 ? 'fa-check text-info' : 'fa-times text-success' %>"></i></td>
                                    <td class="text-nowrap">
                                        <button type="button" class="btn btn-sm btn-warning rounded-0 btn-detail" title="detail" onclick="detailData('<%= row.id %>')">
                                            <i class="far fa-eye fa-fw"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-danger rounded-0 btn-delete" onclick="deleteData('<%= row.id %>')">
                                            <i class="far fa-trash-alt fa-fw"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                            
                        <% } else { %>
                            <tr>
                                <td colspan="5">No data</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
                <hr>
                <%- pagination %>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalData" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <form class="modal-content">
            <div class="modal-header bg-primary">
                <h5 class="modal-title">Modal title</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body row">
                <div class="form-group col-md-6">
                    <label class="form-label">Name</label>
                    <input type="text" name="name" class="form-control form-control-sm rounded-0" autofocus>
                    <span class="invalid-feedback"></span>
                </div>
                <div class="form-group col-md-6">
                    <label class="form-label">SKU</label>
                    <input type="text" name="sku" class="form-control form-control-sm rounded-0">
                    <span class="invalid-feedback"></span>
                </div>
                <div class="form-group col-md-6">
                    <label class="form-label">Catagory</label>
                    <select name="product_category_id" class="form-control form-control-sm rounded-0">
                        <option value="">Choose...</option>
                        <% product_categories.data.map((row) => { %>
                            <option value="<%= row.id %>"><%= row.name %></option>
                        <% }) %>
                    </select>
                    <span class="invalid-feedback"></span>
                </div>
                <div class="form-group col-md-6">
                    <label class="form-label">Units</label>
                    <select name="product_unit_id" class="form-control form-control-sm rounded-0">
                        <option value="">Choose...</option>
                        <% product_units.data.map((row) => { %>
                            <option value="<%= row.id %>"><%= row.name %></option>
                        <% }) %>
                    </select>
                    <span class="invalid-feedback"></span>
                </div>
                <div class="form-group col-md-6">
                    <label class="form-label">Buy Price</label>
                    <input type="text" name="buy_price" class="form-control form-control-sm rounded-0">
                    <span class="invalid-feedback"></span>
                </div>
                <div class="form-group col-md-12">
                    <label class="form-label">Description</label>
                    <textarea name="description" rows="3" class="form-control form-control-sm rounded-0"></textarea>
                    <span class="invalid-feedback"></span>
                </div>
                <div class="form-group col-md-12">
                    <div class="icheck-primary">
                        <input type="checkbox" name="is_active" id="isActive" value="1">
                        <label for="isActive">Active</label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary rounded-0 btn-submit">Save</button>
                <button type="button" class="btn btn-default rounded-0 btn-cancel" data-dismiss="modal">Close</button>
            </div>
      </form>
    </div>
</div>

<script>
    const modalData = $('#modalData')
    const formData = $('#modalData form')

    formData.on('submit', (e) => {
        e.preventDefault()

        $.ajax({
            url: formData.attr('action'),
            type: 'post',
            data: formData.serialize(),
            dataType: 'json',
            beforeSend: () => {
                formData.find('.invalid-feedback').empty()
                formData.find('.btn-submit, .btn-cancel').attr({'disabled': true})
                formData.find('.btn-submit').prepend('<span class="spinner-border spinner-border-sm mr-2">&nbsp;</span>')
                modalData.find('.close').attr({'disabled': true})
            },
            success: (res) => {
                if (res.success) {
                    modalData.modal('hide')
                    window.location.reload()
                } else {
                    if (res.redirect) {
                        window.location = res.redirect
                        return
                    }

                    if ('formError' in res) {
                        if (res.formError !== null && typeof res.formError === 'object') {
                            $.each(res.formError, (key, val) => {
                                let element = formData.find(`[name="${key}"`)

                                if (val !== '') {
                                    element.addClass('is-invalid')
                                    element.parents('.form-group').find('.invalid-feedback').html(val.substr(0,1).toUpperCase() + val.substr(1))
                                }
                            })

                            formData.find('.btn-submit, .btn-cancel').attr({'disabled': false})
                            formData.find('.btn-submit span').remove()
                            modalData.find('.close').attr({'disabled': false})
                            return
                        }
                    }

                    modalData.modal('hide')
                    toastr.error(res.message)
                }
            }
        })
    })

    function addData() {
        formData[0].reset()
        // formData.find('select').val(null).trigger('change')
        formData.attr({'action': '<%= currentUrl %>/create'})
        formData.find('input, select, textarea').removeClass('is-invalid')
        formData.find('.invalid-feedback').empty()
        formData.find('[name="is_active"').prop('checked', true).attr('disabled', true)

        modalData.find('.modal-header .modal-title').html('Add New Data')
        modalData.modal({'backdrop': 'static', 'keyboard': false, 'show': true})
    }

    function detailData(id) {
        if (id && $.isNumeric(id)) {
            $.ajax({
                url: `<%= currentUrl %>/detail/${id}`,
                type: 'get',
                dataType: 'json',
                beforeSend: () => {
                    formData[0].reset()
                    formData.attr({'action': `<%= currentUrl %>/update/${id}`})
                    formData.find('.modal-title').html('Detail Data')
                    formData.find('[name="is_active"').attr('disabled', false)
                },
                success: (res) => {
                    if (res.success) {
                        if (res.total_data > 0) {
                            $.each(res.data, (key, val) => {
                                let element = formData.find(`[name="${key}"`)
                                let elementType = element.prop('type')

                                if (elementType !== undefined) {
                                    if (['is_active'].indexOf(key) >= 0) {
                                        element.prop('checked', val == 1 ? true : false)
                                    } else {
                                        element.val(val)

                                        if (elementType === 'select-one' && element.find(`option[value="${val}"]`).length === 0) {
                                            element.val(null)
                                        }
                                    }
                                }
                            })

                            modalData.modal({'backdrop': 'static', 'keyboard': false, 'show': true})
                        }
                    } else {
                        if (res.redirect) {
                            window.location = res.redirect
                        }
                    }
                },
                error: (jqXHR, textStatus, errorThrown) => {
                    console.log(jqXHR.status + '|' + textStatus + '|' + errorThrown);
                }
            })
        }
    }

    function deleteData(id) {
        if (id && $.isNumeric(id)) {
            const swb = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-sm btn-primary rounded-0 mr-2',
                    cancelButton: 'btn btn-sm btn-default rounded-0'
                },
                buttonsStyling: false
            })

            swb.fire({
                title: 'Delete this data?',
                text: 'This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `<%= currentUrl %>/delete/${id}`,
                        type: 'get',
                        dataType: 'json',
                        success: (res) => {
                            if (res.success) {
                                window.location.reload()
                            } else {
                                if (res.redirect) {
                                    window.location = res.redirect
                                }

                                toastr.error(response.message)
                            }
                        },
                        error: (jqXHR, textStatus, errorThrown) => {
                            console.log(jqXHR.status + '|' + textStatus + '|' + errorThrown);
                        }
                    })
                }
            })
        }
    }

    $(document).ready(() => {
        let productCategoryId = '<%= query.product_category_id %>'
        let productUnitId = '<%= query.product_unit_id %>'

        if (productCategoryId && $.isNumeric(productCategoryId)) {
            let element = $('#formFilter [name="product_category_id"]')
            if (element.find(`option[value="${productCategoryId}"]`).length) {
                element.val(productCategoryId).trigger('change')
            }
        }

        if (productUnitId && $.isNumeric(productUnitId)) {
            let element = $('#formFilter [name="product_unit_id"]')
            if (element.find(`option[value="${productUnitId}"]`).length) {
                element.val(productUnitId).trigger('change')
            }
        }
    })
</script>